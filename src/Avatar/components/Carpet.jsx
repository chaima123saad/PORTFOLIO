/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/models/carpet.glb 
*/

import React, { useState, useEffect } from 'react';
import { useGLTF } from '@react-three/drei';

export function Carpet(props) {
  const { nodes, materials } = useGLTF('models/carpet.glb');

  const [isVisible, setIsVisible] = useState(true);
  useEffect(() => {
    const handleResize = () => {
      // Check if the screen width is less than 900px
      if (window.innerWidth < 900) {
        setIsVisible(false);
      } else {
        setIsVisible(true);
      }
    };

    // Call the function initially to set the visibility based on the initial screen size
    handleResize();

    // Add event listener to handle screen resizing
    window.addEventListener('resize', handleResize);

    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);
  useEffect(() => {
    const handleScroll = () => {
      const scrollY = window.scrollY;

      // Update visibility based on scroll position
      if (scrollY > 100) { // Adjust this value to control when the carpet disappears
        setIsVisible(false);
      } else {
        setIsVisible(true);
      }
    };

    window.addEventListener('scroll', handleScroll);

    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, []);

  // Only render the carpet if it's visible
  return isVisible ? (
    <group {...props} dispose={null}>
      <group scale={0.012} position={[1, -1.5, 0]} rotation-x={-Math.PI / -2.5} rotation-z={-Math.PI / 1.6} >
        <mesh geometry={nodes.Object_16.geometry} material={materials['982665']} />
        <mesh geometry={nodes.Object_17.geometry} material={materials.material} />
      </group>
    </group>
  ) : null;
}

useGLTF.preload('models/carpet.glb');

